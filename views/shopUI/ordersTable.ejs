<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Order's Table</title>
   <script src="https://kit.fontawesome.com/6926c4a9ef.js" crossorigin="anonymous"></script>
   <link rel="stylesheet" href="/css/ordersTable.css">
</head>
<body>
  
   <main class="main">
      
      <%- include('sellerNavbar.ejs') %>


      <div class="back"   id="back" onclick="location.href = '/dashboard_seller'">
        <i class="fa-solid fa-circle-left"></i>
    </div>

      <div class="data-wrapper1" >
       
        <div class="data-table">
            <table>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Address</th>
                        <th>Number of items in order</th>
                        <th>order total:</th>
                    </tr>
                </thead>
                <tbody>
                  
                    <% orders.forEach((order, index) => { %>
                        <tr onclick="viewOrder(<%= JSON.stringify(order) %>)">
                            <td><%= order.name %></td>
                            <td><%= order.address %></td>
                            <td><%= order.itemNum %></td>
                            <td><%= order.total %></td>
                    </tr>
                    <% }) %>
                    
                </tbody>
            </table>
        </div>
      </div>


      <div class="data-wrapper2" style="display: none;">
       

    <div class="top">
        <div class="back" id="back2" style="margin-left: 90px;" >
            <a href="/dashboard_seller"><i class="fa-solid fa-circle-left"></i></a>
        </div>

        <div class="tops">

      
            <div class="sub-top">
                <label for="">Name:</label>
                <input type="text" id="customer-name" disabled>
            </div>
            <div class="sub-top">
                <label for="">Address:</label>
                <input type="text" id="customer-add" disabled>
            </div>
            <div class="sub-top">
                <label for="">Mode of Delivery:</label>
                <input type="text" id="mode" disabled>
            </div>

        </div>
    </div>

    <div  class="middle">
      
        <div class="data-table" id="data-table2">
            <table id="order-table">
                <thead>
                    <tr>
                        <th>Foods</th>
                        <th>Price</th>
                        <th>quantity</th>
                        <th>Set Time for order</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                   
                </tbody>
            </table>
        </div>

    </div>

<div class="total">
<label for="">Total:</label>
<input type="text" value="P1400" readonly>
</div>



<div class= "button-wrapper">
    <!-- <button style="background-color: #FF6464;">Cancel</button> -->
    <button style="background-color: #63FF73;">Deliver</button>
</div>




      </div>

   </main>
    <script>
        function viewOrder(order) {
        console.log(order);

        const mainTable = document.querySelector('.data-wrapper1');
        const backBtn = document.getElementById('back');
        const backBtn2 = document.getElementById('back2');
        const ordersData = document.querySelector('.data-wrapper2');

        document.getElementById("customer-name").value = order.name;
        document.getElementById("customer-add").value = order.address;
        document.getElementById("mode").value = order.mode;

        mainTable.style.display = "none";
        backBtn.style.display = "none";
        backBtn2.style.display = "flex";
        ordersData.style.display = "flex";

        const orderTable = document.getElementById("order-table");

        order.orders.forEach(order => {
        const row = document.createElement("tr");

        const td = document.createElement("td");
        td.innerText = order.name;
        row.appendChild(td);

        const td1 = document.createElement("td");
        td1.innerText = order.total_payment;
        row.appendChild(td1);

        const td2 = document.createElement("td");
        td2.innerText = order.quantity;
        row.appendChild(td2);

        const td3 = document.createElement("td");

        const timeInput = document.createElement("input");
        timeInput.type = "number";
        timeInput.classList.add("inputTime");

        const timeTypeSelect = document.createElement("select");
        timeTypeSelect.classList.add("selectTime");
        timeTypeSelect.required = true;

        const optionBlank = document.createElement("option");
        optionBlank.value = "";
        optionBlank.innerText = "Select time"; 
        optionBlank.disabled = true; 
        optionBlank.selected = true; 

        const optionHour = document.createElement("option");
        optionHour.value = "hour";
        optionHour.innerText = "Hour";

        const optionMinutes = document.createElement("option");
        optionMinutes.value = "minute";
        optionMinutes.innerText = "Minute";

        timeTypeSelect.appendChild(optionBlank);
        timeTypeSelect.appendChild(optionHour);
        timeTypeSelect.appendChild(optionMinutes);

        td3.appendChild(timeInput);
        td3.appendChild(timeTypeSelect);

        row.appendChild(td3);

        const td4 = document.createElement("td");

        // Button for setting the order as Prepairing
        const preparing = document.createElement("button");
        preparing.innerText = "Preparing";
        preparing.style.backgroundColor = "#90D7FF";
        preparing.dataset.orderId = order.order_id;
        preparing.dataset.foodId = order.food_id;

        preparing.addEventListener("click", handlePreparingClick);
        

        // Button for setting the order as "Ready"
        const ready = document.createElement("button");
        ready.innerText = "Ready";
        ready.style.backgroundColor = "#63FF73";
        ready.dataset.orderId = order.order_id;
        ready.dataset.foodId = order.food_id;

        ready.addEventListener("click", hadleReadyClick);

        td4.className = "statusBtn";;
        td4.appendChild(preparing);
        td4.appendChild(ready);

        row.appendChild(td4);

        orderTable.querySelector("tbody").appendChild(row);
        });
        
    }

    function handlePreparingClick(event) {
        const button = event.target;
        const orderId = button.dataset.orderId;
        const foodId = button.dataset.foodId;

        const row = button.closest('tr');
        const timeInput = row.querySelector('.inputTime');
        const timeTypeSelect = row.querySelector('.selectTime');

        const timeValue = timeInput.value;
        const timeTypeValue = timeTypeSelect.value;

        if (!timeValue || !timeTypeValue) {
            alert('Please input the value of Order Time.');
            return;
        }

        const statusValue = `${timeValue} ${timeTypeValue}`;

        fetch('/shop/updateOrderStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                foodId: foodId,
                status: statusValue
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Order status updated successfully.');
            } else {
                alert('Failed to update order status.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error updating order status.');
        });
    }

function hadleReadyClick(event) {
    const button = event.target;
    const orderId = button.dataset.orderId;
    const foodId = button.dataset.foodId;

    //  alert(`Order ID: ${orderId}, Food ID: ${foodId}`);

    fetch('/shop/updateOrderStatusActive', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            orderId: orderId,
            foodId: foodId,
            status: "Ready"
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Order status updated successfully.');
        } else {
            alert('Failed to update order status.');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error updating order status.');
    });
}

</script>

</body>
</html>